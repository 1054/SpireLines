#!/bin/bash
#
# Aim:
#    This code will cut a fits image using IDL
# 
# Usage:
#    source '/Users/dzliu/Cloud/Github/SpireLines/Softwares/bin_setup.bash'
#    FTS_tool_print_MJy_sr_to_Jy_pixel_conversion_factor "SPIRE_250um.fits"
# 


Usage() {
    echo "Usage: "
    echo "    FTS_tool_cut_fits_image \"SPIRE_250um.fits\" -radec 102.0 53.0 -FoV 13.0 13.0 [-out output_file.fits]"
    echo "Note:"
    echo "    FoV are the width and height of the field of view of the output cutout in units of arcsec."
    echo ""
}


if [[ $(type ${BASH_SOURCE[0]} 2>/dev/null | wc -l) -eq 0 ]]; then
    source $(dirname ${BASH_SOURCE[0]})/bin_setup.bash
fi



# 
# Read user input
# 

input_fits_files=()
input_RA="NAN"
input_Dec="NAN"
input_FoV_X="0"
input_FoV_Y="0"
output_fits_file=()

i=1

while [[ $i -le $# ]]; do
    str_arg=$(echo "${!i}" | sed -e 's/^--/-/g' | tr '[:upper:]' '[:lower:]')
    if [[ "$str_arg" == "-radec" ]]; then
        if [[ $(bc <<< "$i+2") -le $# ]]; then
            i=$(bc <<< "$i+1")
            input_RA="${!i}"
            i=$(bc <<< "$i+1")
            input_Dec="${!i}"
        fi
    elif [[ "$str_arg" == "-fov" ]]; then
        if [[ $(bc <<< "$i+2") -le $# ]]; then
            i=$(bc <<< "$i+1")
            input_FoV_X="${!i}"
            i=$(bc <<< "$i+1")
            input_FoV_Y="${!i}"
        fi
    elif [[ "$str_arg" == "-out" ]]; then
        if [[ $(bc <<< "$i+1") -le $# ]]; then
            i=$(bc <<< "$i+1")
            output_fits_file+=("${!i}")
        fi
    else
        input_fits_files+=("${!i}")
    fi
    i=$(bc <<< "$i+1")
done



if [[ ${#input_fits_files[@]} -eq 0 ]] || [[ x"$input_RA" == x"NAN" ]] || [[ x"$input_Dec" == x"NAN" ]] || [[ x"$input_FoV_X" == x"0" ]] || [[ x"$input_FoV_Y" == x"0" ]]; then
    Usage
    exit
fi


# 
# Run IDL code
# 
IDL_PATH="$IDL_PATH:$(dirname ${BASH_SOURCE[0]}):+$(dirname ${BASH_SOURCE[0]})/IDLAstro/pro"
echo "IDL_PATH=$IDL_PATH"
for (( i = 0; i < ${#input_fits_files[@]}; i++ )); do
if [[ ${#output_fits_file[@]} -gt $i ]]; then
idl -quiet << EOF
.r FTS_tool_cut_fits_image_idl
FTS_tool_cut_fits_image_idl, '${input_fits_files[i]}', $input_RA, $input_Dec, $input_FoV_X, $input_FoV_Y, output_file='${output_fits_file[i]}'
EOF
else
idl -quiet << EOF
.r FTS_tool_cut_fits_image_idl
FTS_tool_cut_fits_image_idl, '${input_fits_files[i]}', $input_RA, $input_Dec, $input_FoV_X, $input_FoV_Y
EOF
fi
done















